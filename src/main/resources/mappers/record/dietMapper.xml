<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multipjt.multi_pjt.record.diet.dao.DietMapper">

    <!-- dietRow --> 

    <insert id="dietInsert" parameterType="java.util.Map">
        insert into DietRecords(meal_type,member_id)
        values(#{meal_type},#{member_id});
    </insert>

    <!-- itemRow --> 

    <insert id="itemInsert" parameterType="com.multipjt.multi_pjt.record.diet.domain.ItemRequestDTO">
        insert into DietItems(item_name,quantity,carbs,protein,fat,calories,diet_id)
        values(#{item_name},#{quantity},#{carbs},#{protein},#{fat},#{calories},#{diet_id}); 
    </insert>    

    <!-- findDietNumber --> 

    <select id="findDietNumber" parameterType="java.util.Map" resultType="java.lang.Integer">
        select diet_id from DietRecords
        where member_id = #{member_id} and record_date = #{record_date} and meal_type = #{meal_type}
    </select>

    <!-- dietDelete --> 

    <delete id="dietDelete" parameterType="java.lang.Integer">
        delete from DietRecords
        where diet_id = #{diet_id};
    </delete>

    <!-- itemDelete --> 

    <delete id="itemDelete" parameterType="java.lang.Integer">
        delete from DietItems
        where item_id = #{item_id};
    </delete>    

    <!-- dietFind --> 

    <select id="dietFind" parameterType="java.util.Map" resultType="com.multipjt.multi_pjt.record.diet.domain.DietResponseDTO">
        select * from DietRecords
        where member_id = #{member_id} and record_date = #{record_date} and meal_type = #{meal_type};
    </select>

    <!-- dietFindAll --> 

    <select id="dietFindAll" parameterType="java.util.Map" resultType="com.multipjt.multi_pjt.record.diet.domain.DietResponseDTO">
        select * from DietRecords
        where member_id = #{member_id} and record_date = #{record_date};
    </select>

    <!-- itemFindAll --> 

    <select id="itemFindAll" parameterType="java.lang.Integer" resultType="com.multipjt.multi_pjt.record.diet.domain.ItemResponseDTO">
        select * from DietItems
        where diet_id = #{diet_id}
        order by item_id ASC;
    </select>

    <!-- itemUpdate --> 

    <update id="itemUpdate" parameterType="com.multipjt.multi_pjt.record.diet.domain.ItemRequestDTO">
        update DietItems
        set 
        calories = #{calories},
        quantity = #{quantity},
        carbs = #{carbs},
        fat = #{fat},
        protein = #{protein}
        where item_id = #{item_id};
    </update>    

    <!-- itemNutCheck --> 

    <select id="mealNutCheck" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT 
            d.meal_type AS mealType,
            SUM(i.calories) AS totalCalorie,
            SUM(i.carbs) AS totalCarb,
            SUM(i.protein) AS totalProtein,
            SUM(i.fat) AS totalFat,
            SUM(i.quantity) AS totalQuantity
        FROM DietRecords d
        JOIN DietItems i
            ON d.diet_id = i.diet_id
        WHERE d.record_date = #{record_date}
            AND d.member_id = #{member_id}
        GROUP BY d.meal_type;
    </select>

    <!-- memberDataGet --> 

    <select id="memberDataGet" parameterType="java.lang.Integer" resultType="java.util.Map">
        select profile_gender, profile_age , profile_weight ,profile_height, profile_goal, profile_workout_frequency from UserProfile
        where member_id = #{member_id};
    </select>    

    <!-- mealUpdate --> 

    <update id="mealUpdate" parameterType="java.util.HashMap">
        update DietRecords
        set meal_type = #{meal_type}
        where diet_id = #{diet_id}; 
    </update>

    <!-- getMonthDiet --> 

    <select id="getMonthDiet" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT DATE_FORMAT(record_date, '%Y-%m-%d') as record_date
        , SUM(calories) as totalCalories
        FROM DietRecords
        JOIN DietItems
            ON DietRecords.diet_id = DietItems.diet_id
        WHERE member_id = #{member_id}
        AND YEAR(record_date) = #{year}
        AND MONTH(record_date) = #{month}
        GROUP BY record_date
        ORDER BY record_date ASC;
    </select>

</mapper>